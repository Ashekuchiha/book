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

https://github.com/Ashekuchiha/test.git

echo "# test" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:Ashekuchiha/test.git
git push -u origin main

git remote add origin git@github.com:Ashekuchiha/test.git
git branch -M main
git push -u origin main



->git --v
->git config
->git config --list
->git config user.name
->git config user.email



*set name and email:
->git config --global user.name ""
->git config --global user.email "" 

*local set name and email:
->git config --user.email ""
->git config --user.email ""


->pwd==cd (present working directory)
->git init(folder ta git k dilam)
->dir (folder e ki ki asay oita dekhar jonno)
->git status (kon kon file work space e asay ar kon kon file stagging area ty asay)

*going stagging area:
->git add filename (only this file)
->git add-A (all file and sub folder)
->git add . (only al file not sub folder)

->git add *.js (.js extetion all file in this folder )
->git add **/*.js (from all folder all ,js file)


git restore filename (update remove korar jonno)
git rm --cached filename (git stagging area thika ber hobar jonno)


git diff (ager file er shaty notun file ki change hoisay oita dekhar jonno)

add ->diff -> status->


git commit -m ''

git log
git log --oneline
git show id


***work space thika sorasori local repretory nia jabar cmd:
->git add day3.txt && git commit -m "day3 is add"


*undo commit:
git checkout filename

git reset --soft head^(local to stagging)
git reset head^ (local to working directory)
git reset --hard head^ (local to outside of work directory)


git reset --soft head~3 ()



->git checkout commitid/ head~number
->git revert id

git ignore :
test.tat
.env
*.txt
!main.txt
test_number.txt
temp/ (temp folder er sob file ignore korby)

touch .gitignore

git remote
git remote -v
git remote add origin url


clone
git clone url

push:
 git push -u origin main


git branch:
->git branch branch_name
for checking which branch i am:
->git branch -a
for changing the branch
->git checkout branch_name

git branch -M main

without marge the new branch with master branch delet this kind of branch 
->git branch -D branch_name
but marged new branch with master branch delet this kind of branch
->git branch -d branch_name

how to marge other branch with master branch
->git marge branch_name

->git pull














